name: Push Frontend Docker image to AWS ECR Repo

on:
  push:
    branches: [ "main" ]
    paths:
      - frontend/front-pymes/src/**
  pull_request:
    branches: [ "main" ]
    paths:
      - frontend/front-pymes/src/**

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION}}
        aws-session-token: ${{ secrets.AWS_SESSION_TOKEN}}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: calculate version
      id: calculate-version
      uses: bitshifted/git-auto-semver@v1
    
    - name: Use version
      id: show-version
      run: echo "Calculated version ${{ steps.calculate-version.outputs.version-string }}"

    - name: Build and tag the docker 
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.FRONTEND_REPO_NAME }}
        IMAGE_TAG: ${{ steps.calculate-version.outputs.version-string }}
      run: docker build ./frontend/front-pymes -t $ECR_REGISTRY/$ECR_REPOSITORY:latest

    - name: Push image to Amazon ECR
      id: push-image 
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.FRONTEND_REPO_NAME }}
        IMAGE_TAG: ${{ steps.calculate-version.outputs.version-string }}
      run: docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
        
