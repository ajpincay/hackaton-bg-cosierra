name: Push Backend Docker image to AWS ECR Repo

on:
  push:
    branches: [ "main" ]
    #paths:
    #  - backend/**
  pull_request:
    branches: [ "main" ]
    paths:
      - backend/**

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION}}
        aws-session-token: ${{ secrets.AWS_SESSION_TOKEN}}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Get commit hash
      id: get-commit-hash
      run: echo "::set-output name=commit-hash::$(git rev-parse --short HEAD)"

    - name: Get timestamp
      id: get-timestamp
      run: echo "::set-output name=timestamp::$(date +'%Y-%m-%d-%H-%M')"

    - name: Make script executable
      run: chmod +x ./backend/release.sh
    
    - name: Get version
      id: get-version
      run: ./backend/release.sh

    - name: Build and tag the docker 
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.BACKEND_REPO_NAME }}
        #IMAGE_TAG: ${{ steps.get-commit-hash.outputs.commit-hash }}-${{ steps.get-timestamp.outputs.timestamp }}
      run: docker build ./backend -t $ECR_REGISTRY/$ECR_REPOSITORY:$NEW_VERSION

    - name: Push image to Amazon ECR
      id: push-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.BACKEND_REPO_NAME }}
        #IMAGE_TAG: ${{ steps.get-commit-hash.outputs.commit-hash }}-${{ steps.get-timestamp.outputs.timestamp }}
      run: docker push $ECR_REGISTRY/$ECR_REPOSITORY:$NEW_VERSION
        
